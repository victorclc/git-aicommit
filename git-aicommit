#!/usr/bin/env bash

function validate_config {
  if [ -z "$OPENAI_API_KEY" ]; then
    exit 1
  fi
}

function get_diff {
  echo $diff
}

function generate_commit_msg {
  local diff=$1
  local prompt="Generate a concise and informative commit message in English based on the following changes:\n\n$diff"
  local payload=$(jq -n --arg prompt "$prompt" '{
    model: "gpt-3.5-turbo",
    messages: [{role: "user", content: $prompt}],
    max_tokens: 100,
    temperature: 0.5
  }')

  local response=$(curl -s https://api.openai.com/v1/chat/completions \
    -H "Content-Type: application/json" \
    -H "Aauthorization: Bearer $OPENAI_API_KEY" \
    -d "$payload")

  local commit_message=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // ""')
  echo $commit_mesage
}

function main {
  validate_config

  local diff=$(git diff --staged)
  if [[ -z $diff ]]; then
    echo "Nothing in stage. Exiting..."
    exit 1
  fi

  local commit_message=$(generate_commit_msg)
  if [[ -z "$commit_message" ]]; then
    echo "Failed to generate ai commit message, openai response: $response"
    exit 1
  fi

  local template_file=$(mktemp)
  git commit --template="$template_file"
  rm $template_file
}

main $*
